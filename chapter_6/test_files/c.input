
#define str(s) #s  //generate string from arguments(see 6.10.3.2,P153)
    #define str2(s) str(s)  //用实参宏替换后的序列生成字符串
    puts(str2(ID));  //原样输出宏ID的替换列表
//#include "s_cerror.h\"
"/*`"
#define aaa "SSS"
#define aaa() "xxx"

#define hash_hash1 #123 ## #
#define hash_hash(STR) #STR ## ## # STR
#define mkstr(a) # a
#define in_between(a) mkstr(a)
#define join(c, d) in_between(c hash_hash d)

#define hash #
#define STRSS(sd,sd2) #sd##"abc"###sd #sd###sd  


/*
about:'\'
1.'\\' optional-' ' '\n' means the sequence can be deleted and the original token separated by it can be regarded as a whole token
2.'\\' occurs in "" or '' means the backescape charactor
3.other case , illegal

about: comment
1.comment can be deleted directly, but the original token separated by it can not be regarded as a whole token, it means two tokens

about: macro
1.start with # oneline
2.# define token optional(x,y,etc)
3.# must start at the beginning of line, caution: last line ending with '\'
*/

int main()
{
    printf("%s", aaa);
		return 0;
}